#!/bin/bash

MVN_REPOSITORY="$HOME/.m2/repository"

SABER_VERBOSE=true

SABER_LIBDIR="$SABER_HOME/lib"

SABER_LOGDIR="$SABER_HOME/logs"
SABER_PIDDIR="$SABER_HOME/.pids"

SABER_TRAP="$SABER_HOME/.trap"

# Logs Java commands invoked from run.sh to SABER_HOME/run.log
SABER_RUN_LOG=true

SABER_WAITTIME=10

SABER_DEFAULT_DURATION=60

#
# JVM configuration
#
# Log garbage collection events
SABER_JVM_LOGGC=false

# Min heap size (in GB)
# Old version: SABER_JVM_MS=48
SABER_JVM_MS=16

# Max heap size (in GB)
# Old version: SABER_JVM_MX=48
SABER_JVM_MX=16

# New & survivor ratio
SABER_JVM_NEWRATIO=2
SABER_JVM_SURVIVORRATIO=16

#
# Saber system configuration
#
# Execution mode: either "cpu", "gpu" or "hybrid" (default is "cpu")
SABER_CONF_EXECUTIONMODE=

# Number of CPU worker threads (default is 1)
SABER_CONF_NUMWORKERTHREADS=

# Number of result slots (default is 1024)
SABER_CONF_NUMRESULTSLOTS=

# Scheduling policy: one of "fifo", "hls", or "static" (default is "fifo")
SABER_CONF_SCHEDULINGPOLICY=

# Switch threshold - used by HLS to allow non-preferred processor to 
# execute some tasks (default is to allow every 10 tasks)
SABER_CONF_SWITCHTHRESHOLD=

# Maximum number of window fragments in a query task (default is 65536)
SABER_CONF_NUMPARTIALWINDOWS=

# Circular buffer size (in bytes); implicitly controls the number of 
# queued tasks (default is 1073741824, i.e. 1GB)
SABER_CONF_CIRCULARBUFFERSIZE=

# Intermediate result buffer size (in bytes) (default is 1048576, i.e. 1MB)
SABER_CONF_INTERMEDIATEBUFFERSIZE=

# Hash table size (in bytes): hash tables hold partial window aggregate 
# results (default is 1048576, i.e. 1MB)
SABER_CONF_HASHTABLESIZE=

# Throughput monitor interval (in msec): controls how often the query task 
# throughput matrix is updated (default is 1000, or 1sec)
SABER_CONF_THROUGHPUTMONITORINTERVAL=

# Performance monitor interval (in msec): controls how often Saber prints
# performance measurements (such as throughput) to stdout (default is 1000, or 1sec)
SABER_CONF_PERFORMANCEMONITORINTERVAL=

# Maximum number of upstream queries. For example, a theta-join query has
# two upstream queries (default is 2)
SABER_CONF_UPSTREAMQUERIES=

# Pipeline depth: number of GPU execution pipelines (default is 4)
SABER_CONF_PIPELINEDEPTH=

# Boolean that determines whether Saber measures task latency or not (default is false)
SABER_CONF_MEASURELATENCY=

# Boolean that determines whether we launch Saber Workbench's back-end server
SABER_CONF_LAUNCHWEBSERVER=

# The duration of the experiments, after which no more measurements will be recorded
# by the system (default is 0, i.e. no limit specified)
#
# The unit is determined by `SABER_CONF_PERFORMANCEMONITORINTERVAL`.
#
SABER_CONF_EXPERIMENTDURATION=

